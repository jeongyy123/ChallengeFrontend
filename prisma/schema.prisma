
// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Users {
  userId    Int       @id @default(autoincrement()) @map("userId")
  username  String    @map("userName")
  password  String    @map("password")
  credit    Int       @default(300000) @map("credit")
  
<<<<<<< HEAD
  Reservation Reservation[]
=======
  Categories Categories[]
  Menus      Menus[]
  Orders     Orders[]
>>>>>>> 6db91f577553823053ffd5bae39150518afcaca5

  @@map("Users")
}

<<<<<<< HEAD
model Shows {
  showId    Int      @id @default(autoincrement()) @map("showId")
  showName  String   @map("showName")
  postUrl   String   @map("postUrl")
  price     Int      @map("price")
  location  String   @map("location")
  date      DateTime @map("date")
  quantity  Int      @map("quantity")
=======
model Categories {
  categoryId Int       @id @default(autoincrement()) @map("categoryId")
  UserId     Int       @map("UserId")
  name       String    @map("name")
  order      Int       @map("order")
  author      String   @map("author")  //신규
  deletedAt  DateTime? @map("deletedAt")
>>>>>>> 6db91f577553823053ffd5bae39150518afcaca5

  Reservation Reservation[]

  @@map("Shows")
}

<<<<<<< HEAD
model Reservation {
  reservationId Int   @id @default(autoincrement()) @map("reservationId")
  UserId        Int   @map("UserId")
  ShowId        Int   @map("ShowId")
   
  Show  Shows         @relation(fields: [ShowId], references: [showId], onDelete:Cascade)
  User  Users         @relation(fields: [UserId], references: [userId], onDelete:Cascade)

  @@map("Reservation")
=======
model Menus {
  menuId      Int       @id @default(autoincrement()) @map("menuId")
  CategoryId  Int       @map("CategoryId")
  UserId      Int       @map("UserId")
  name        String    @map("name")
  order       Int       @map("order")
  description String    @map("description")
  image       String    @map("image")
  price       Int       @map("price")
  author      String    @map("author")  //신규
  status      String    @default("FOR_SALE") @map("status")
  deletedAt   DateTime? @map("deletedAt")

  Orders   Orders[]
  Category Categories   @relation(fields: [CategoryId], references: [categoryId])
  User     Users        @relation(fields: [UserId], references: [userId])

  @@map("Menus")
>>>>>>> 6db91f577553823053ffd5bae39150518afcaca5
}

model Orders {
  orderId    Int       @id @default(autoincrement()) @map("orderId")
  UserId     Int       @map("UserId")
  MenuId     Int       @map("MenuId")
  quantity   Int       @map("quantity")
  status     String    @default("PENDING") @map("status")
  totalPrice Int       @map("totalPrice")
  orderedAt  DateTime  @map("orderedAt")

  User Users @relation(fields:[UserId], references:[userId])
  Menu Menus @relation(fields:[MenuId], references:[menuId])

  @@map("Orders")
}